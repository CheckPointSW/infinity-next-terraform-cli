# Visit https://goreleaser.com for documentation on how to customize this
# behavior.
project_name: 'inext'
before:
  hooks:
    # this is just an example and not a requirement for building
    - go mod tidy
builds:
- env:
    # goreleaser does not work with CGO, it could also complicate
    # usage by users in CI/CD systems like Terraform Cloud where
    # they are unable to install libraries.
    - CGO_ENABLED=0
  mod_timestamp: '{{ .CommitTimestamp }}'
  flags:
    - -trimpath
  ldflags:
    - '-s -w -X main.version={{.Version}} -X main.commit={{.Commit}}'
  goos:
    - freebsd
    - windows
    - linux
    - darwin
  goarch:
    - amd64
    - '386'
    - arm
    - arm64
  ignore:
    - goos: darwin
      goarch: '386'
  binary: 'inext'
archives:
  - format: binary
    id: binary_archive
    name_template: '{{ .ProjectName }}'
  - format: zip
    id: zip_archive
    name_template: '{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_SHA256SUMS'
  algorithm: sha256
nfpms:
- builds:
  - inext
  file_name_template: 'inext_{{ .Version }}_{{ .Os }}_{{ .Arch }}'
  package_name: 'inext'
  formats:
    - apk
    - deb
    - rpm
release:
  # If you want to manually examine the release before its live, uncomment this line:
  draft: true
changelog:
  skip: true